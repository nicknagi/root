From 27acb11d549c1bd0e0605007874b187df0908b1d Mon Sep 17 00:00:00 2001
From: Lorenzo Moneta <Lorenzo.Moneta@cern.ch>
Date: Wed, 2 Sep 2020 14:31:24 +0200
Subject: [PATCH] add fixes to make it compile with cudnn architecture

---
 tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h    |  2 +-
 tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h   |  8 ++++++
 tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h | 28 +++++++++++++++++++
 .../tmva/inc/TMVA/DNN/CNN_3D/MaxPool3DLayer.h |  7 +++--
 4 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h b/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h
index e14f671b2c..8fc2d40b49 100644
--- a/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h
+++ b/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h
@@ -617,7 +617,7 @@ public:
 
    static void CalculateConv3DActivationGradients(Tensor_t &activationGradientsBackward,
                                                     const Tensor_t &df,
-                                                    const Matrix_t &weights, 
+                                                    const Matrix_t &weights,
                                                     const DNN::CNN_3D::TConv3DParams & params);
 
    static void CalculateConv3DWeightGradients(Matrix_t &weightGradients,
diff --git a/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h b/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h
index 49e6319a8c..0470ca5c20 100644
--- a/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h
+++ b/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h
@@ -623,6 +623,14 @@ public:
                           size_t imgHeight, size_t imgWidth, size_t fltHeight,
                           size_t fltWidth, size_t strideRows, size_t strideCols);
 
+   static void Downsample3D(Tensor_t & /* tA */, Tensor_t & /* tB */, const Tensor_t & /* tC */,
+                            const PoolingDescriptors_t & /*descriptors*/, PoolingWorkspace_t & /*workspace*/,
+                            size_t /* imgHeight */, size_t /* imgWidth */, size_t /* imgDepth */,
+                            size_t /* fltHeight */, size_t /* fltWidth */, size_t /*  fltDepth */,
+                            size_t /* strideRows */, size_t /* strideCols */, size_t /*  strideDepth */)
+   {
+   }
+
       ///@}
 
    /** @name Backward Propagation in Max Pooling Layer
diff --git a/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h b/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h
index 8ffb391a34..3cd8244025 100644
--- a/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h
+++ b/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h
@@ -26,9 +26,12 @@
 
 #include "TMVA/DNN/Functions.h"
 #include "TMVA/DNN/CNN/ContextHandles.h"
+#include "TMVA/DNN/CNN_3D/ContextHandles.h"
 //#include "TMVA/DNN/CNN/Descriptors.h"
 #include "TMVA/DNN/BatchNormLayer.h"
 #include "TMVA/DNN/CNN/ConvLayer.h"
+#include "TMVA/DNN/CNN_3D/Conv3DLayer.h"
+#include "TMVA/DNN/CNN_3D/MaxPool3DLayer.h"
 #include "TMVA/DNN/CNN/MaxPoolLayer.h"
 #include "TMVA/DNN/RNN/RNNLayer.h"
 #include "TMVA/DNN/RNN/LSTMLayer.h"
@@ -576,6 +579,11 @@ public:
                                 const DNN::CNN::TConvParams &params, EActivationFunction activFunc,
                                 Tensor_t & /* inputPrime */, const ConvDescriptors_t &descriptors,
                                 ConvWorkspace_t &workspace);
+
+   static void  Conv3DLayerForward(Tensor_t &/* output */, Tensor_t &/* inputActivationFunc */, const Tensor_t &/* input */, const Matrix_t &/* weights */,
+                      const Matrix_t &/* biases */, const DNN::CNN_3D::TConv3DParams &/* params */, EActivationFunction /* activFunc */,
+                      Tensor_t & /*  */, const ConvDescriptors_t & /*descriptors*/, ConvWorkspace_t & /*workspace*/) {}
+
    // const AFloat alpha = 1,
    // const AFloat beta  = 1);
 
@@ -600,6 +608,14 @@ public:
                                  size_t /*width*/, size_t /*filterDepth*/, size_t /*filterHeight*/,
                                  size_t /*filterWidth*/, size_t /*nLocalViews*/);
 
+   static void Conv3DLayerBackward(Tensor_t &/* activationGradientsBackward */, Matrix_t &/* weightGradients */,
+                                   Matrix_t &/* biasGradients */, Tensor_t &/* inputActivationFunc */,
+                                   Tensor_t &/* activationGradients */, const Matrix_t &/* weights */,
+                                   const Tensor_t &/* activationsBackward */, const Tensor_t &/* outputTensor */,
+                                   EActivationFunction /* activFunc */, const ConvDescriptors_t & /*descriptors*/,
+                                   ConvWorkspace_t & /*workspace*/, const DNN::CNN_3D::TConv3DParams &/* params */)
+                                    {}
+
    ///@}
 
    //____________________________________________________________________________
@@ -617,6 +633,11 @@ public:
                           PoolingWorkspace_t &workspace, size_t imgHeight, size_t imgWidth, size_t fltHeight,
                           size_t fltWidth, size_t strideRows, size_t strideCols);
 
+   static void Downsample3D(Tensor_t &/* tA */, Tensor_t &/* tB */, const Tensor_t &/* tC */,
+                            const PoolingDescriptors_t & /*descriptors*/, PoolingWorkspace_t & /*workspace*/,
+                            size_t /* imgHeight */, size_t /* imgWidth */, size_t /* imgDepth */, size_t /* fltHeight */, size_t /* fltWidth */,
+                            size_t/*  fltDepth */, size_t /* strideRows */, size_t /* strideCols */, size_t/*  strideDepth */) {}
+
    ///@}
 
    /** @name Backward Propagation in Max Pooling Layer
@@ -631,6 +652,13 @@ public:
                                     PoolingWorkspace_t &workspace, size_t imgHeight, size_t imgWidth, size_t fltHeight,
                                     size_t fltWidth, size_t strideRows, size_t strideCols, size_t nLocalViews);
 
+   static void MaxPoolLayer3DBackward(Tensor_t &/* activationGradientsBackward */, const Tensor_t &/* activationGradients */,
+                                      const Tensor_t &/* indexMatrix */, const Tensor_t & /*inputActivation*/,
+                                      const Tensor_t & /*outputTensor*/, const PoolingDescriptors_t & /*descriptors*/,
+                                      PoolingWorkspace_t & /*workspace*/, size_t /* imgHeight */, size_t /* imgWidth */,
+                                      size_t /* fltHeight */, size_t /* fltWidth */, size_t /* strideRows */,
+                                      size_t /* strideCols */, size_t /* nLocalViews */) {}
+
    ///@}
 
    //____________________________________________________________________________
diff --git a/tmva/tmva/inc/TMVA/DNN/CNN_3D/MaxPool3DLayer.h b/tmva/tmva/inc/TMVA/DNN/CNN_3D/MaxPool3DLayer.h
index 7ec934ff77..ad99a4b12f 100644
--- a/tmva/tmva/inc/TMVA/DNN/CNN_3D/MaxPool3DLayer.h
+++ b/tmva/tmva/inc/TMVA/DNN/CNN_3D/MaxPool3DLayer.h
@@ -25,6 +25,7 @@
 #include "TMatrix.h"
 
 #include "TMVA/DNN/CNN_3D/Conv3DLayer.h"
+#include "TMVA/DNN/CNN/MaxPoolLayer.h"
 
 #include "TMVA/DNN/Functions.h"
 #include "TMVA/DNN/CNN_3D/ContextHandles.h"
@@ -171,7 +172,7 @@ TMaxPool3DLayer<Architecture_t>::TMaxPool3DLayer(size_t batchSize, size_t inputD
    : VGeneralLayer<Architecture_t>(
         batchSize, inputDepth, inputHeight, inputWidth, inputDepth,
         TConv3DLayer<Architecture_t>::calculateDimension(inputHeight, filterHeight, 0, strideX),
-        TConv3DLayer<Architecture_t>::calculateDimension(inputWidth, filterWidth, 0, strideY), 
+        TConv3DLayer<Architecture_t>::calculateDimension(inputWidth, filterWidth, 0, strideY),
         TConv3DLayer<Architecture_t>::calculateDimension(inputDepth, filterDepth, 0, strideZ), 0, 0, 0, 0,
         0, // weights dimensions
         batchSize, inputDepth,
@@ -256,8 +257,8 @@ auto TMaxPool3DLayer<Architecture_t>::Backward(Tensor_t &gradients_backward, con
    Architecture_t::MaxPoolLayer3DBackward(
       gradients_backward, this->GetActivationGradients(), fIndexTensor, activations_backward, this->GetOutput(),
       (CNN::TCNNDescriptors<TMVA::DNN::CNN::TMaxPoolLayer<Architecture_t>> &) (*fDescriptors),
-      (CNN::TCNNWorkspace<TMVA::DNN::CNN::TMaxPoolLayer<Architecture_t>> &) (*fWorkspace), this->GetInputHeight(), this->GetInputWidth(), 
-      this->GetFilterHeight(), this->GetFilterWidth(),  this->GetStrideX(), this->GetStrideY(), 
+      (CNN::TCNNWorkspace<TMVA::DNN::CNN::TMaxPoolLayer<Architecture_t>> &) (*fWorkspace), this->GetInputHeight(), this->GetInputWidth(),
+      this->GetFilterHeight(), this->GetFilterWidth(),  this->GetStrideX(), this->GetStrideY(),
       this->GetNLocalViews());
 }
 
-- 
2.17.1

